<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.test1.mapper.BookMapper" >
  <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"></cache>-->
  <!--<cache type="com.zking.test1.redis.RedisCache"></cache>-->

  <resultMap id="BaseResultMap" type="com.zking.test1.model.Book" >
    <constructor >
      <idArg column="book_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="book_price" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="book_brief" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <resultMap id="row" type="com.zking.test1.model.Book" >
      <id column="book_id" property="bookId" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <result column="book_name" property="bookName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result column="book_price" property="bookPrice" jdbcType="REAL" javaType="java.lang.Float" />
      <result column="book_brief" property="bookBrief" jdbcType="VARCHAR" javaType="java.lang.String" />
  </resultMap>
  <sql id="Base_Column_List" >
    book_id, book_name, book_price, book_brief
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="delAll" parameterType="com.zking.test1.vo.BookVo" >
    delete from t_book
    where book_id in
    <foreach collection="bookIds" item="bid"
             open="(" separator="," close=")" >
      #{bid}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.zking.test1.model.Book" useGeneratedKeys="true" keyColumn="bookId">
    insert into t_book (book_id, book_name, book_price, 
      book_brief)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookPrice,jdbcType=REAL}, 
      #{bookBrief,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.test1.model.Book" >
    insert into t_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookPrice != null" >
        book_price,
      </if>
      <if test="bookBrief != null" >
        book_brief,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        #{bookPrice,jdbcType=REAL},
      </if>
      <if test="bookBrief != null" >
        #{bookBrief,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.test1.model.Book" >
    update t_book
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        book_price = #{bookPrice,jdbcType=REAL},
      </if>
      <if test="bookBrief != null" >
        book_brief = #{bookBrief,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.test1.model.Book" >
    update t_book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_price = #{bookPrice,jdbcType=REAL},
      book_brief = #{bookBrief,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <select id="list" resultMap="row" parameterType="com.zking.test1.vo.BookVo" useCache="false">
    select *
    from t_book
    where 1=1
    <if test="bookName != null and ''!= bookName">
        and book_name LIKE concat('%',#{bookName,jdbcType=VARCHAR},'%')
    </if>
    <if test="null != min">
      and book_price &gt;= #{min,jdbcType=REAL}
    </if>
    <if test="null != max">
      and book_price &lt;= #{max,jdbcType=REAL}
    </if>
  </select>
</mapper>